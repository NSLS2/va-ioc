#outTerminator = "\r";
#inTerminator = "\r\r\n>";
LockTimeout = 2000;
ReplyTimeout = 500;
ReadTimeout =  100;
WriteTimeout = 100;

extrainput   = Ignore;
MaxInput = 0;

Terminator = CR;

#@init{out " ";}
#ReplyTimeout = 10000;
#ReadTimeout = 10000;


## Pump controller general commands

#  Model number
getModel {
	out "~ 05 01 %01<SUM8>";
	in "05 OK 00 DIGITEL %s %0<SUM8>";
}

# Firmware revision 
getFirmware {
	out "~ 05 02 %01<SUM8>"; 
	in "05 OK 00 DIGITEL FIRMWARE: %s %0<SUM8>"; 
}

# Execute software reset
masterReset {
	out "~ 05 07 %01<SUM8>";
}

# Set pressure unit
setUnit {	
	out "~ 05 0E %{T|M|P} %01<SUM8>";
	in "05 OK 00 %0<SUM8>";
}

# Unlock/Lock keypad
setKeypadLock {
	out "~ 05 %{45|44} %01<SUM8>";
	in "05 OK 00 %0<SUM8>";
}

# Set HV auto recovery mode
setHVAutoRecy {
	out "~ 05 68 %{0|1|2} %01<SUM8>";
	in "05 OK 00 %0<SUM8>";
}

# Get HV auto recovery mode
getHVAutoRecy {
	out "~ 05 69 %01<SUM8>";
	in "05 OK 00 %{0|1|2} %0<SUM8>";
}

# Set communication mode
setCommMode {
	out "~ 05 D3 %{0|1|2} %01<SUM8>";
	in "05 OK 00 %0<SUM8>";
}

# Get communication mode
getCommMode {
	out "~ 05 D4 %01<SUM8>";
	in "05 OK 00 %{0|1|2} %0<SUM8>";
}

# Set supplies to automatically restart on power up
setAutostartPower {
	out "~ 05 33 %{NO|YES} %01<SUM8>";
	in "05 OK 00 %0<SUM8>";
}

# Read auto restart status
getAutostartPower {
	out "~ 05 34 %01<SUM8>";
	in "05 OK 00 %{NO|YES} %0<SUM8>";
}

## Ion Pump basic
# Read current
getCurrent {
        out "~ 05 0A %01<SUM8>";
        in "05 OK 00 %f %(EGU)s %0<SUM8>";
}

# Read pressure
getPressure {
        out "~ 05 0B %01<SUM8>";
        in "05 OK 00 %f %(EGU)s %0<SUM8>";
}

# Read voltage
getVoltage {
        out "~ 05 0C %01<SUM8>";
        in  "05 OK 00 %i %0<SUM8>";
}

# Get supply status
getSupplyStatus {
	out "~ 05 0D %01<SUM8>";
        in  "05 OK 00 %u %0<SUM8>";
}

# Get pump size
getPumpSize {
	out "~ 05 11 %01<SUM8>";
	in "05 OK 00 %u %(EGU)s %0<SUM8>";
}

# Set pump size
setPumpSize {
	out "~ 05 12 %u %01<SUM8>";
	in "05 OK 00 %0<SUM8>";
}

# Get Arc detect
getArcDetect {
	out "~ 05 91 %01<SUM8>";
	in "05 OK 00 %{NO|YES} %0<SUM8>";
}

# Set arc detect
setArcDetect {
	out "~ 05 92 %{NO|YES} %01<SUM8>";
	in "05 OK 00 %0<SUM8>";
}

# Get calibration factor
getCalFactor {
	out "~ 05 1D %01<SUM8>";
	in "05 OK 00 %f %0<SUM8>";
}

# Set calibration factor
setCalFactor {
	out "~ 05 1E %1.2f %01<SUM8>";
	in "05 OK 00 %0<SUM8>";
}

# Start/Stop pump
setHVOn {
        out "~ 05 37 %01<SUM8>";
        in "05 OK 00 %0<SUM8>";
}

setHVOff {
        out "~ 05 38 %01<SUM8>";
        in "05 OK 00 %0<SUM8>";
}

# Get/Set current/pressure analog output 
getAnalogOutMode {
	out "~ 05 50 %01<SUM8>";
	in "05 OK 00 %{0 Logarithmic pressure|1 Logarithmic current|2 Volts per 1.0uA|3 Volts per 10.0uA|4 Volts per 100.0uA|5 Volts per 1.0mA|6 Volts per 10.0mA|7 Volts per 50.0mA|8 Volts per 1.0nA|9 Volts per 10.0nA|10 Volts per 100.0nA} %0<SUM8>";
}

setAnalogOutMode {
	out "~ 05 51 %u %01<SUM8>";
	in "05 OK 00 %0<SUM8>";
	# @init { getAnalogOutMode; }
}

# Get HV status
getHVState {
	out "~ 05 61 %01<SUM8>";
	in "05 OK 00 %{NO|YES} %0<SUM8>";
}

# Process set points
getSetpoint {
	out "~ 05 3C %01<SUM8>";
	in "05 OK 00 \$1 %{0|1}(\$2Enbl:Rly\$1-Sts.VAL),%(\$2P:Rly\$1On-RB.VAL)E,%(\$2P:Rly\$1Off-RB.VAL)E,%1u %0<SUM8>";
}

setSetpoint {
	out "~ 05 3D \$1,%{0|1}(\$2Enbl:Rly\$1-Cmd.VAL),%(\$2P:Rly\$1On-SP.VAL)1.1E,%(\$2P:Rly\$1Off-SP.VAL)1.1E %01<SUM8>";
	in "05 OK 00 %0<SUM8>";
}
